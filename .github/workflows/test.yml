name: test
on:
  workflow_call:
    inputs:
      # github_pat:
      #   description: 'aws service'
      #   type: string
      #   required: true
      env_variables:
        type: string
        description: 'aws task'
        required: true
      # cluster:
      #   description: 'aws cluster'
      #   type: string
      #   required: true
      # REPO:
      #   type: string
      #   description: 'aws task'
      #   required: true
  
      # task-params:
      #   description: 'aws cluster'
      #   type: string
      #   required: true


permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: echo inputs
        run: | 
            echo ${{ inputs.env_variables }}
            echo ${{ inputs.env_variables }}
      # - name: configure aws credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     role-to-assume:  arn:aws:iam::381492127440:role/oidc
      #     role-session-name: samplerolesession
      #     aws-region: us-east-1

      # - name: launch
      #   id: run-task
      #   uses: geekcell/github-action-aws-ecs-run-task@v3.0.0
      #   with:
      #     cluster: ${{ inputs.cluster }}
      #     task-definition: ${{ inputs.task_definition }}
      #     assign-public-ip: 'ENABLED'
      #     subnet-ids: |
      #       subnet-05697ffd26b05cf4e
      #     security-group-ids: |
      #       sg-0aba0176f4107f2d7
      #     override-container-environment: |
      #       REPO=${{ inputs.REPO }}   
      # - name: Provide a self-hosted runner to execute this job
      #   uses: PasseiDireto/gh-runner-task-action@v2.1.2
      #   with:
      #     github_pat: ${{ inputs.github_pat }}
      #     task_definition: ${{ inputs.task_definition }}
      #     cluster: ${{ inputs.cluster }}
      #     task_params_file: ${{ inputs.task-params }}
      #     network-configuration: |
      #           awsvpcConfiguration={
      #             subnets=[subnet-12345678],
      #             securityGroups=[sg-abcdef01],
      #             assignPublicIp=ENABLED
      #           }


  # actual-job:
  #   runs-on: self-hosted
  #   needs: build
  #   steps:
  #     - name: Run a sample command
  #       run: echo hello
