name: Image check
on:
  workflow_call:
    inputs:
      service-name:
        description: "aws service name"
        type: string
        required: true
      role-to-assume:
        type: string
        required: true
        description: role arn
      role-session-name:
        type: string
        required: true
        description: role session name
      task-name:
        description: "aws task"
        type: string
        required: true
      cluster-name:
        description: "aws cluster name"
        type: string
        required: true
      aws-region-name:
        type: string
        required: true
        description: aws region name
    outputs:
      image-tag:
        value: ${{ jobs.image-tag.outputs.image-tag }}

jobs:
  image-tag:
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.image-tag.outputs.image }}
    steps:
      # Logging to aws
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          role-to-assume: ${{ inputs.role-to-assume }}
          role-session-name: ${{ inputs.role-session-name }}
          aws-region: ${{ inputs.aws-region-name }}

      - name: Install AWS CLI
        uses: aws-actions/setup-aws-cli@v2

        # Getting image tag
      - name: Getting the image-tag
        if: steps.server-status.outputs.service_status == 'true'
        id: image-tag
        run: |
          task_definition=$(aws ecs describe-task-definition --task-definition ${{ inputs.task-name }} --query "taskDefinition.containerDefinitions[0].image" --output text 2> || echo "task-definition not found")
          if [[ task_definition == "task-definition not found" ]]; then
            image_tag=latest
            echo "image=$image_tag" >> $GITHUB_OUTPUT
          else
            image_tag=$(echo $task_definition | awk -F ':' '{print $2}')
            echo $image_tag
            echo "image=$image_tag" >> $GITHUB_OUTPUT
          fi
